__TEMPLATE__=editor
__LANG__=python
# -*- coding: utf-8 -*-
# @Time    : 2024/11/16 09:07
# @Author  : AI悦创
# @FileName: app.py
# @Software: CodeMark
# @Blog    ：https://bornforthis.cn/

# 欢迎使用 CodeMark在线编辑器
# 此编辑器会自动生成分享链接
# 右键打开自定义菜单：
#   - 格式化、运行、截图、复制代码、复制分享链接 等
#!/usr/bin/env python3
# -*- coding: utf-8 -*-

def test_python_basics():
    """
    测试环境是否支持常见的 Python 基础语法和常用特性
    """

    # 1. 变量与基本数据类型
    integer_var = 42
    float_var = 3.14
    string_var = "Hello, Python!"
    boolean_var = True
    哈哈哈哈
    none_var = None

    # 2. 条件语句 (if / elif / else)
    if integer_var > 0 and boolean_var:
        pass
    elif integer_var == 0:
        pass
    else:
        pass

    # 3. 循环 (for / while)
    for i in range(3):
        # range(3) 生成 0,1,2
        pass

    counter = 0
    while counter < 3:
        counter += 1

    # 4. 容器类型 (list, dict, set, tuple) 及其基本操作
    my_list = [1, 2, 3]
    my_dict = {'one': 1, 'two': 2}
    my_set = {1, 2, 3}
    my_tuple = (10, 20, 30)

    my_list.append(4)
    my_dict['three'] = 3
    my_set.add(4)
    # tuple 不可变，只能读取

    # 5. 列表推导式 (List Comprehension)
    squares = [x*x for x in my_list]

    # 6. 字典推导式 (Dict Comprehension)
    doubled_dict = {k: v*2 for k, v in my_dict.items()}

    # 7. 集合推导式 (Set Comprehension)
    squared_set = {x*x for x in my_set}

    # 8. 函数与默认参数、可变参数
    def greet(name="World", *args, **kwargs):
        return f"Hello, {name}!"

    greeting_msg = greet("Python")

    # 9. 匿名函数 (lambda)
    adder = lambda x, y: x + y
    sum_result = adder(3, 5)

    # 10. 类与继承
    class Animal:
        def __init__(self, name):
            self.name = name

        def speak(self):
            return "Some generic sound"

    class Dog(Animal):
        def speak(self):
            return "Woof!"

    dog = Dog("Fido")
    dog_speak = dog.speak()

    # 11. 异常处理 (try / except / finally)
    try:
        _ = 1 / 0
    except ZeroDivisionError:
        pass
    finally:
        pass

    # 12. 上下文管理器 (with)
    # 这里以读取本文件自身为例，如果不能读当前文件，可以把 __file__ 改成其他路径
    # try:
    #     with open(__file__, "r", encoding="utf-8") as f:
    #         _ = f.read()
    # except OSError:
    #     pass

    # 13. 变量作用域、内置函数等
    global_var = "I am global"

    def show_scope():
        # 演示访问 global 变量
        return global_var

    _ = show_scope()

    # 14. import 内置或标准库模块
    import math
    sqrt_16 = math.sqrt(16)

    # 15. f-string (Python 3.6+) / str.format()
    f_str_example = f"The sqrt of 16 is {sqrt_16}, and squares are {squares}."

    # 16. 测试交互式输入 (input)
    user_input = input("请输入任意内容进行测试（然后按回车）：")
    if user_input:
        print(f"你输入的是：{user_input}")
    else:
        print("你没有输入任何东西。")
        说说
        
        说说

    # 如果程序执行到此处依然没有异常，说明绝大部分基础特性都可用
    return True


if __name__ == "__main__":
    if test_python_basics():
        print("你的 Python 环境已通过常见基础语法特性的测试！")
    else:
        print("测试失败：某些基础语法或特性不被环境支持。")
